{"version":3,"sources":["/./src/app/form/ngx-wizard/address/address.component.html","/./src/app/form/ngx-wizard/navbar/navbar.component.html","/./src/app/form/ngx-wizard/ngx-wizard.component.html","/./src/app/form/ngx-wizard/personal/personal.component.html","/./src/app/form/ngx-wizard/result/result.component.html","/./src/app/form/ngx-wizard/work/work.component.html","/./src/app/form/ngx-wizard/address/address.component.scss","/./src/app/form/ngx-wizard/address/address.component.ts","/./src/app/form/ngx-wizard/data/formData.model.ts","/./src/app/form/ngx-wizard/data/formData.service.ts","/./src/app/form/ngx-wizard/navbar/navbar.component.scss","/./src/app/form/ngx-wizard/navbar/navbar.component.ts","/./src/app/form/ngx-wizard/ngx-wizard-routing.module.ts","/./src/app/form/ngx-wizard/ngx-wizard.component.scss","/./src/app/form/ngx-wizard/ngx-wizard.component.ts","/./src/app/form/ngx-wizard/ngx-wizard.module.ts","/./src/app/form/ngx-wizard/personal/personal.component.scss","/./src/app/form/ngx-wizard/personal/personal.component.ts","/./src/app/form/ngx-wizard/result/result.component.scss","/./src/app/form/ngx-wizard/result/result.component.ts","/./src/app/form/ngx-wizard/work/work.component.scss","/./src/app/form/ngx-wizard/work/work.component.ts","/./src/app/form/ngx-wizard/workflow/workflow.model.ts","/./src/app/form/ngx-wizard/workflow/workflow.service.ts"],"names":[],"mappings":"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","file":"default~form-forms-module~ngx-wizard-ngx-wizard-module.js","sourcesContent":["module.exports = \"<!-- Address Tab form Starts -->\\r\\n<form #addressForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div class=\\\"tab-pane active\\\">\\r\\n        <h4 class=\\\"head text-center\\\">{{title}}</h4>\\r\\n        <br/>\\r\\n        <div class='row'>\\r\\n            <div class='col-sm-12'>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-control-label\\\" for=\\\"street\\\">Street Address</label>  \\r\\n                    <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"street\\\" name=\\\"street\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.street\\\">\\r\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!street.valid && (street.dirty || street.touched)\\\">This field is required!</small>\\r\\n                    \\r\\n                </div>   \\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-12 col-sm-4'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"city\\\">City</label>  \\r\\n                            <input class=\\\"form-control input-md\\\" #city=\\\"ngModel\\\" required id=\\\"city\\\" name=\\\"city\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.city\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!city.valid && (city.dirty || city.touched)\\\">This field is required!</small>\\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-4 col-sm-offset-1 col-sm-3'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"state\\\">State</label>  \\r\\n                            <input class=\\\"form-control input-md\\\" #state=\\\"ngModel\\\" required id=\\\"state\\\" name=\\\"state\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.state\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!state.valid && (state.dirty || state.touched)\\\">This field is required!</small>\\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-offset-1 col-7 col-sm-offset-1 col-sm-3'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"zip\\\">Zip</label>  \\r\\n                            <input class=\\\"form-control input-md\\\" #zip=\\\"ngModel\\\" required id=\\\"zip\\\" name=\\\"zip\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.zip\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!zip.valid && (zip.dirty || zip.touched)\\\">This field is required!</small>\\r\\n                            \\r\\n                        </div>  \\r\\n                    </div> \\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                    <button uiSref=\\\"work\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" (click)=\\\"cancel()\\\">Previous</button>\\r\\n                    <button uiSref=\\\"result\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-info\\\" [disabled]=\\\"!addressForm.valid\\\" (click)=\\\"save(addressForm)\\\"> Next </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    \\r\\n    </div>\\r\\n</form>\\r\\n<!-- Address Tab form Ends -->\"","module.exports = \"<!-- Navbar for Wizard Starts -->\\r\\n<ul class=\\\"wizard-navbar\\\">\\r\\n        <div class=\\\"liner\\\"></div>\\r\\n\\r\\n        <li class=\\\"active flex-fill\\\">\\r\\n            <a [ngClass]=\\\"(page==='Personal')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"personal\\\" data-toggle=\\\"tab\\\"\\r\\n                title=\\\"personal\\\">\\r\\n                <span class=\\\"round-tabs one\\\">\\r\\n                    <i class=\\\"icon-User\\\"></i>\\r\\n                </span>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"flex-fill\\\">\\r\\n            <a [ngClass]=\\\"(page==='Work')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"work\\\" data-toggle=\\\"tab\\\" title=\\\"work\\\">\\r\\n                <span class=\\\"round-tabs two\\\">\\r\\n                    <i class=\\\"icon-Shopping-Bag\\\"></i>\\r\\n                </span> \\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"flex-fill\\\">\\r\\n            <a [ngClass]=\\\"(page==='Address')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"address\\\" data-toggle=\\\"tab\\\" title=\\\"address\\\">\\r\\n                <span class=\\\"round-tabs three\\\">\\r\\n                    <i class=\\\"icon-Location-2\\\"></i>\\r\\n                </span>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"flex-fill\\\">\\r\\n            <a [ngClass]=\\\"(page==='Result')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"result\\\" data-toggle=\\\"tab\\\" title=\\\"completed\\\">\\r\\n                <span class=\\\"round-tabs four\\\">\\r\\n                    <i class=\\\"icon-Cursor\\\"></i>\\r\\n                </span>\\r\\n            </a>\\r\\n        </li>\\r\\n</ul>\\r\\n<!-- Navbar for Wizard Ends -->\"","module.exports = \"<section id=\\\"ngx\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card-block\\\">\\r\\n                <div class=\\\"board\\\">\\r\\n                    <!-- Navigation Area (Circular Tabs) -->\\r\\n                    <msw-navbar></msw-navbar>\\r\\n                    <!-- End Navigation Area (Circular Tabs) -->\\r\\n\\r\\n                    <!-- Content Area -->\\r\\n                    <div class=\\\"tab-content\\\">\\r\\n                        <!-- Nested view  -->\\r\\n                        <router-outlet> </router-outlet>\\r\\n                    </div>\\r\\n                    <!-- End Content Area -->\\r\\n                </div>\\r\\n                <!-- For Debugging: show our valid formData -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>        \\r\\n</section>\"","module.exports = \"<!-- Personal Tab Form Starts -->\\r\\n<form #personalForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div class=\\\"tab-pane active\\\">\\r\\n        <p class=\\\"font-medium-2 text-center\\\">{{title}}</p>\\r\\n        <br/>\\r\\n        <div class='row'>\\r\\n            <div class='col-12'>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"firstname\\\">First Name</label>  \\r\\n                            <input class=\\\"form-control input-md\\\" #firstname=\\\"ngModel\\\" required id=\\\"firstname\\\" name=\\\"firstname\\\" type=\\\"text\\\"  [(ngModel)]=\\\"personal.firstName\\\">   \\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!firstname.valid && (firstname.dirty || firstname.touched)\\\">This field is required!</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"lastname\\\">Last Name</label>  \\r\\n                            <input class=\\\"form-control input-md\\\" #lastname=\\\"ngModel\\\" required id=\\\"lastname\\\" name=\\\"lastname\\\" type=\\\"text\\\"  [(ngModel)]=\\\"personal.lastName\\\">\\r\\n                            <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!lastname.valid && (lastname.dirty || lastname.touched)\\\">This field is required!</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-control-label\\\" for=\\\"email\\\">Email</label>\\r\\n                    <input class=\\\"form-control input-md\\\" #email=\\\"ngModel\\\" required email id=\\\"email\\\" name=\\\"email\\\" type=\\\"text\\\"  [(ngModel)]=\\\"personal.email\\\">\\r\\n                    <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!email.valid && (email.dirty || email.touched)\\\">Please enter a valid email!</small>\\r\\n                </div>\\r\\n                    \\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                    <button type=\\\"button\\\" uiSref=\\\"work\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!personalForm.valid\\\" (click)=\\\"save(personalForm)\\\"> Next </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n<!-- Personal Tab Form Ends -->\"","module.exports = \"<!-- Result tab Form starts -->\\r\\n<div class=\\\"tab-pane active\\\">\\r\\n    <h3 class=\\\"head text-center\\\">{{title}}</h3>\\r\\n    \\r\\n    <p class=\\\"narrow text-center\\\">\\r\\n        Here is a copy of the information you have entered:\\r\\n    </p>\\r\\n    <div class='row'>\\r\\n        <div class='col-offset-1 col-10 col-sm-offset-3 col-sm-8 col-md-offset-4 col-md-8'>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\" for=\\\"name\\\">Name: </label> \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.firstName + ' ' + formData.lastName}}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\" for=\\\"email\\\">Email: </label> \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.email}}\\r\\n                </div>\\r\\n           </div>     \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\" for=\\\"work\\\">Work: </label> \\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.work}}\\r\\n                </div>\\r\\n           </div>     \\r\\n           <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\" for=\\\"address\\\">Address: </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.street}}\\r\\n                    <br/>\\r\\n                    {{formData.city + ' ' + formData.state + ' ' + formData.zip}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!isFormValid\\\" (click)=\\\"submit()\\\"> Submit <span style=\\\"margin-left:10px;\\\"><i class=\\\"ft-chevron-right\\\"></i></span></button>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- Result tab Form ends -->\"","module.exports = \"<!-- Work Tab Form Starts -->\\r\\n<form #workForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div >\\r\\n        <div class=\\\"tab-pane active\\\">\\r\\n            <h4 class=\\\"head text-center\\\">{{title}}</h4>\\r\\n            <br/>\\r\\n            <div class='row'>\\r\\n                <div class='col-offset-4 col-10 col-sm-offset-5 col-sm-4'>\\r\\n                  <div class=\\\"custom-control custom-radio\\\">\\r\\n                  <input type=\\\"radio\\\" id=\\\"customRadio1\\\" #work=\\\"ngModel\\\" required name=\\\"work\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"workType\\\" value=\\\"Design\\\" class=\\\"custom-control-input\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customRadio1\\\">Design</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-radio\\\">\\r\\n                  <input type=\\\"radio\\\" id=\\\"customRadio2\\\" #work=\\\"ngModel\\\" required name=\\\"work\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"workType\\\" value=\\\"Code\\\" class=\\\"custom-control-input\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customRadio2\\\">Code</label>\\r\\n                </div>\\r\\n                <div class=\\\"custom-control custom-radio\\\">\\r\\n                  <input type=\\\"radio\\\" id=\\\"customRadio3\\\" #work=\\\"ngModel\\\" required name=\\\"work\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"workType\\\" value=\\\"Deploy\\\" class=\\\"custom-control-input\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customRadio3\\\">Deploy</label>\\r\\n                </div>  \\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n            <div class=\\\"form-group text-center space-20\\\">\\r\\n                <button uiSref=\\\"personal\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary mr-1\\\" (click)=\\\"cancel()\\\"> Previous</button>\\r\\n                <button uiSref=\\\"address\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-info\\\" [disabled]=\\\"!workForm.valid\\\" (click)=\\\"save(workForm)\\\"> Next </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n<!-- Work Tab Form Ends -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vbmd4LXdpemFyZC9hZGRyZXNzL2FkZHJlc3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Address } from '../data/formData.model';\r\nimport { FormDataService } from '../data/formData.service';\r\nimport { WorkflowService } from \"../workflow/workflow.service\";\r\nimport { STEPS } from \"../workflow/workflow.model\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'mt-wizard-address',\r\n    templateUrl: './address.component.html',\r\n    styleUrls: ['./address.component.scss']\r\n})\r\n\r\nexport class AddressComponent implements OnInit {\r\n    title = 'Where do you live?';\r\n    address: Address;\r\n    form: any;\r\n\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute, private formDataService: FormDataService,\r\n        private workflowService: WorkflowService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.address = this.formDataService.getAddress();\r\n\r\n    }\r\n    //Save button event Starts\r\n    save(form: any) {\r\n        if (!form.valid)\r\n            return;\r\n\r\n        this.formDataService.setAddress(this.address);\r\n        let firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\r\n        this.router.navigate(['result'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n    //Save button event Ends\r\n\r\n    //Cancel button event Starts\r\n    cancel() {\r\n        this.router.navigate(['work'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n    //Cancel button event Ends\r\n}","//Wizard form data class Starts\r\nexport class FormData {\r\n    firstName: string = '';\r\n    lastName : string = '';\r\n    email: string = '';\r\n    work: string = '';\r\n    street: string = '';\r\n    city: string = '';\r\n    state: string = '';\r\n    zip: string = '';\r\n\r\n    clear() {\r\n        this.firstName = '';\r\n        this.lastName = '';\r\n        this.email = '';\r\n        this.work = '';\r\n        this.street = '';\r\n        this.city = '';\r\n        this.state = '';\r\n        this.zip = '';\r\n    }\r\n}\r\n//Wizard form data class Ends\r\n\r\n//Personal tab data class starts\r\nexport class Personal {\r\n    firstName: string = '';\r\n    lastName : string = '';\r\n    email: string = '';\r\n}\r\n//Personal tab data class ends\r\n\r\n//Address tab data class starts\r\nexport class Address {\r\n    street: string = '';\r\n    city: string = '';\r\n    state: string = '';\r\n    zip: string = '';\r\n}\r\n//Address tab data class Ends","import { Injectable } from '@angular/core';\r\n\r\nimport { FormData, Personal, Address } from './formData.model';\r\nimport { WorkflowService } from '../workflow/workflow.service';\r\nimport { STEPS } from '../workflow/workflow.model';\r\n\r\n@Injectable()\r\nexport class FormDataService {\r\n\r\n    private formData: FormData = new FormData();\r\n    private isPersonalFormValid: boolean = false;\r\n    private isWorkFormValid: boolean = false;\r\n    private isAddressFormValid: boolean = false;\r\n\r\n    constructor(private workflowService: WorkflowService) {\r\n    }\r\n    //Get Personal Tab Data\r\n    getPersonal(): Personal {\r\n        // Return the Personal data\r\n        var personal: Personal = {\r\n            firstName: this.formData.firstName,\r\n            lastName: this.formData.lastName,\r\n            email: this.formData.email\r\n        };\r\n        return personal;\r\n    }\r\n\r\n    //Set Personal Tab Data\r\n    setPersonal(data: Personal) {\r\n        // Update the Personal data only when the Personal Form had been validated successfully\r\n        this.isPersonalFormValid = true;\r\n        this.formData.firstName = data.firstName;\r\n        this.formData.lastName = data.lastName;\r\n        this.formData.email = data.email;\r\n        // Validate Personal Step in Workflow\r\n        this.workflowService.validateStep(STEPS.personal);\r\n    }\r\n\r\n    //Get Work Tab Data\r\n    getWork(): string {\r\n        // Return the work type\r\n        return this.formData.work;\r\n    }\r\n\r\n    //Set Work Tab Data\r\n    setWork(data: string) {\r\n        // Update the work type only when the Work Form had been validated successfully\r\n        this.isWorkFormValid = true;\r\n        this.formData.work = data;\r\n        // Validate Work Step in Workflow\r\n        this.workflowService.validateStep(STEPS.work);\r\n    }\r\n\r\n    //Get Address Tab Data\r\n    getAddress(): Address {\r\n        // Return the Address data\r\n        var address: Address = {\r\n            street: this.formData.street,\r\n            city: this.formData.city,\r\n            state: this.formData.state,\r\n            zip: this.formData.zip\r\n        };\r\n        return address;\r\n    }\r\n    \r\n    //Set Address Tab Data\r\n    setAddress(data: Address) {\r\n        // Update the Address data only when the Address Form had been validated successfully\r\n        this.isAddressFormValid = true;\r\n        this.formData.street = data.street;\r\n        this.formData.city = data.city;\r\n        this.formData.state = data.state;\r\n        this.formData.zip = data.zip;\r\n        // Validate Address Step in Workflow\r\n        this.workflowService.validateStep(STEPS.address);\r\n    }\r\n\r\n    getFormData(): FormData {\r\n        // Return the entire Form Data\r\n        return this.formData;\r\n    }\r\n\r\n    resetFormData(): FormData {\r\n        // Reset the workflow\r\n        this.workflowService.resetSteps();\r\n        // Return the form data after all this.* members had been reset\r\n        this.formData.clear();\r\n        this.isPersonalFormValid = this.isWorkFormValid = this.isAddressFormValid = false;\r\n        return this.formData;\r\n    }\r\n\r\n    isFormValid() {\r\n        // Return true if all forms had been validated successfully; otherwise, return false\r\n        return this.isPersonalFormValid &&\r\n            this.isWorkFormValid &&\r\n            this.isAddressFormValid;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vbmd4LXdpemFyZC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params, NavigationEnd } from \"@angular/router\";\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'msw-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.scss']\r\n})\r\n\r\nexport class NavbarComponent {\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute) {\r\n    }\r\n    page: string = \"Personal\";\r\n    ngOnInit() {\r\n        this.router.events\r\n            //.filter(event => event instanceof NavigationEnd)\r\n            .subscribe(event => {\r\n                let currentRoute = this.route.root;\r\n                while (currentRoute.children[0] !== undefined) {\r\n                    currentRoute = currentRoute.children[0];\r\n                }\r\n                this.page = currentRoute.snapshot.data[\"title\"];\r\n            })\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NGXFormWizardComponent } from \"./ngx-wizard.component\";\r\nimport { PersonalComponent }  from './personal/personal.component';\r\nimport { WorkComponent }      from './work/work.component';\r\nimport { AddressComponent }   from './address/address.component';\r\nimport { ResultComponent }    from './result/result.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n     component: NGXFormWizardComponent,\r\n    data: {\r\n      title: 'ngx-wizard'\r\n    },\r\n    children: [\r\n      {\r\n        path: 'wizard',\r\n        component: PersonalComponent,\r\n        data: {\r\n          title: 'Personal'\r\n        }\r\n      },\r\n      {\r\n        path: 'work',\r\n        component: WorkComponent,        \r\n        data: {\r\n          title: 'Work'\r\n        }\r\n      },  \r\n      {\r\n        path: 'address',\r\n        component: AddressComponent,\r\n        data: {\r\n          title: 'Address'\r\n        }\r\n      },  \r\n      {\r\n        path: 'result',\r\n        component: ResultComponent,\r\n        data: {\r\n          title: 'Result'\r\n        }\r\n      }      \r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NGXWizardRoutingModule { }\r\n\r\nexport const routedComponents = [NGXFormWizardComponent];\r\n","module.exports = \".tab-content .tab-pane {\\n  padding-top: 20px;\\n}\\n\\n.alert {\\n  padding: 8px;\\n  margin-bottom: 8px;\\n}\\n\\n.ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9ybS9uZ3gtd2l6YXJkL0Q6XFxiaXRjb2luZXIgcHJvamVjdFxcbmV3bHkgdXBkYXRlZC9zcmNcXGFwcFxcZm9ybVxcbmd4LXdpemFyZFxcbmd4LXdpemFyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZm9ybS9uZ3gtd2l6YXJkL25neC13aXphcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtBQ0NKOztBREVBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSw4QkFBQTtFQUFnQyxVQUFBO0FDRWxDOztBREFBO0VBQ0UsOEJBQUE7RUFBZ0MsUUFBQTtBQ0lsQyIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vbmd4LXdpemFyZC9uZ3gtd2l6YXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYi1jb250ZW50IC50YWItcGFuZXtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG59XHJcblxyXG4uYWxlcnQge1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbn1cclxuXHJcbi5uZy12YWxpZFtyZXF1aXJlZF0sIC5uZy12YWxpZC5yZXF1aXJlZCAge1xyXG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cclxufVxyXG4ubmctaW52YWxpZDpub3QoZm9ybSkgIHtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNhOTQ0NDI7IC8qIHJlZCAqL1xyXG59XHJcbiIsIi50YWItY29udGVudCAudGFiLXBhbmUge1xuICBwYWRkaW5nLXRvcDogMjBweDtcbn1cblxuLmFsZXJ0IHtcbiAgcGFkZGluZzogOHB4O1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbi5uZy12YWxpZFtyZXF1aXJlZF0sIC5uZy12YWxpZC5yZXF1aXJlZCB7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgIzQyQTk0ODtcbiAgLyogZ3JlZW4gKi9cbn1cblxuLm5nLWludmFsaWQ6bm90KGZvcm0pIHtcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjYTk0NDQyO1xuICAvKiByZWQgKi9cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n@Component({\r\n    selector: 'multi-step-wizard-app',\r\n    templateUrl: './ngx-wizard.component.html',\r\n    styleUrls: ['./ngx-wizard.component.scss']\r\n})\r\n\r\nexport class NGXFormWizardComponent implements OnInit {\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.router.navigate(['/forms/ngx/wizard'], { skipLocationChange: true });\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { NGXWizardRoutingModule } from \"./ngx-wizard-routing.module\";\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n/* App Root */\r\nimport { NGXFormWizardComponent } from './ngx-wizard.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\n/* Feature Components */\r\nimport { PersonalComponent } from './personal/personal.component';\r\nimport { WorkComponent } from './work/work.component';\r\nimport { AddressComponent } from './address/address.component';\r\nimport { ResultComponent } from './result/result.component';\r\n\r\n/* Shared Service */\r\nimport { FormDataService } from './data/formData.service';\r\nimport { WorkflowService } from './workflow/workflow.service';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule,\r\n        FormsModule,\r\n        NGXWizardRoutingModule\r\n    ],\r\n    providers: [{ provide: FormDataService, useClass: FormDataService },\r\n    { provide: WorkflowService, useClass: WorkflowService }],\r\n    declarations: [NGXFormWizardComponent, NavbarComponent, PersonalComponent, WorkComponent, AddressComponent, ResultComponent],\r\n    bootstrap: [NGXFormWizardComponent]\r\n\r\n})\r\n\r\nexport class NGXFormWizardModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vbmd4LXdpemFyZC9wZXJzb25hbC9wZXJzb25hbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Personal } from '../data/formData.model';\r\nimport { FormDataService } from '../data/formData.service';\r\nimport { WorkflowService } from \"../workflow/workflow.service\";\r\nimport { STEPS } from \"../workflow/workflow.model\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'mt-wizard-personal',\r\n    templateUrl: './personal.component.html',\r\n    styleUrls: ['./personal.component.scss']\r\n})\r\n\r\nexport class PersonalComponent implements OnInit {\r\n    title = 'Please tell us about yourself.';\r\n    personal: Personal;\r\n    form: any;\r\n\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute, private formDataService: FormDataService,\r\n        private workflowService: WorkflowService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.personal = this.formDataService.getPersonal();\r\n    }\r\n\r\n    //Save button event Starts\r\n    save(form: any) {\r\n        if (!form.valid)\r\n            return;\r\n\r\n        this.formDataService.setPersonal(this.personal);\r\n\r\n        let firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\r\n        if (firstState.length > 0) {          \r\n        };       \r\n        this.router.navigateByUrl('/forms/ngx/work', { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n    //Save button event Ends\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vbmd4LXdpemFyZC9yZXN1bHQvcmVzdWx0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input }   from '@angular/core';\r\n\r\nimport { FormData }                   from '../data/formData.model';\r\nimport { FormDataService }            from '../data/formData.service';\r\n\r\n@Component ({\r\n    selector:     'mt-wizard-result',\r\n    templateUrl: './result.component.html',\r\n    styleUrls: ['./result.component.scss']\r\n})\r\n\r\nexport class ResultComponent implements OnInit {\r\n    title = 'Thank You!';\r\n    @Input() formData: FormData;\r\n    isFormValid: boolean = false;\r\n    \r\n    constructor(private formDataService: FormDataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.formData = this.formDataService.getFormData();\r\n        this.isFormValid = this.formDataService.isFormValid();\r\n       \r\n    }\r\n\r\n    //Submit button event Starts\r\n    submit() {\r\n        alert('Excellent Job!');\r\n        this.formData = this.formDataService.resetFormData ();\r\n        this.isFormValid = false;\r\n    }\r\n    //Submit button event Ends\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vbmd4LXdpemFyZC93b3JrL3dvcmsuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormDataService } from '../data/formData.service';\r\nimport { WorkflowService } from \"../workflow/workflow.service\";\r\nimport { STEPS } from \"../workflow/workflow.model\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'mt-wizard-work',\r\n    templateUrl: './work.component.html',\r\n    styleUrls: ['./work.component.scss']\r\n})\r\n\r\nexport class WorkComponent implements OnInit {\r\n    title = 'What do you do?';\r\n    workType: string;\r\n    form: any;\r\n\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute, private formDataService: FormDataService,\r\n        private workflowService: WorkflowService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.workType = this.formDataService.getWork();\r\n\r\n    }\r\n    //Save button event Starts\r\n    save(form: any) {\r\n        if (!form.valid)\r\n            return;\r\n\r\n        this.formDataService.setWork(this.workType);\r\n        let firstState = this.workflowService.getFirstInvalidStep(STEPS.work);       \r\n        this.router.navigate(['address'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n    //Save button event Ends\r\n\r\n    //Cancel button event Starts\r\n    cancel() {\r\n        this.router.navigate(['wizard'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n    //Cancel button event Ends\r\n}","export const STEPS = {\r\n    personal: 'personal',\r\n    work: 'work',\r\n    address: 'address',\r\n    result: 'result'\r\n}\r\n","import { Injectable }         from '@angular/core';\r\nimport { STEPS }              from './workflow.model';\r\n\r\n@Injectable()\r\nexport class WorkflowService {\r\n    private workflow = [\r\n        { step: STEPS.personal, valid: false },\r\n        { step: STEPS.work, valid: false },\r\n        { step: STEPS.address, valid: false },\r\n        { step: STEPS.result, valid: false }\r\n    ];\r\n    \r\n    validateStep(step: string) {\r\n        // If the state is found, set the valid field to true \r\n        var found = false;\r\n        for (var i = 0; i < this.workflow.length && !found; i++) {\r\n            if (this.workflow[i].step === step) {\r\n                found = this.workflow[i].valid = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    resetSteps() {\r\n        // Reset all the steps in the Workflow to be invalid\r\n        this.workflow.forEach(element => {\r\n            element.valid = false;\r\n        });\r\n    }\r\n\r\n    getFirstInvalidStep(step: string) : string {\r\n        // If all the previous steps are validated, return blank\r\n        // Otherwise, return the first invalid step\r\n        var found = false;\r\n        var valid = true;\r\n        var redirectToStep = '';\r\n        for (var i = 0; i < this.workflow.length && !found && valid; i++) {\r\n            let item = this.workflow[i];\r\n            if (item.step === step) {\r\n                found = true;\r\n                redirectToStep = '';\r\n            }\r\n            else {\r\n                valid = item.valid;\r\n                redirectToStep = item.step\r\n            }\r\n        }\r\n        return redirectToStep;\r\n    }\r\n}"],"sourceRoot":""}